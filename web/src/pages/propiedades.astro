---
import Layout from '../layouts/Layout.astro'
import PreviewHouseItem from '../components/PreviewHouseItem.astro'
import {getAllHouses} from "../utils/getStrapiInfo"
const AllData = await getAllHouses()
const SellData = AllData.filter((house : {categoria_propiedad: {slug: String}}) => house.categoria_propiedad.slug === 'venta')
const RentData = AllData.filter((house : {categoria_propiedad: {slug: String}}) => house.categoria_propiedad.slug === 'renta')
---

<Layout>
  <main class="max-w-7xl mx-auto ">

    <section class="p-2">
      <h2 class="text-center mt-10 text-3xl md:text-5xl font-bold text-balance p-2">
        Selecciona el tipo de propiedad que deseas
      </h2>
    
      <div class="flex justify-center items-center text-lg font-medium text-center text-gray-500 border-b border-gray-300">
        <ul class="flex flex-wrap justify-center">
          <li class="me-2">
            <button class="tablinks inline-block p-4 border-b-2 border-transparent rounded-t-lg hover:text-gray-600 hover:border-gray-300 active" data-tab="todas">
              Todas las Propiedades
            </button>
          </li>
          <li class="me-2">
            <button class="tablinks inline-block p-4 border-b-2 border-transparent rounded-t-lg hover:text-gray-600 hover:border-gray-300" data-tab="venta">
              Propiedades en Venta
            </button>
          </li>
          <li class="me-2">
            <button class="tablinks inline-block p-4 border-b-2 border-transparent rounded-t-lg hover:text-gray-600 hover:border-gray-300" data-tab="renta">
              Propiedades en Renta
            </button>
          </li>
        </ul>
      </div>  
    </section>

    <section class="">
      <!-- Contenido de las pestañas -->
      <div id="todas" class="tabcontent animate-fadeIn">
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4 mt-6">
          {AllData.map((house : {house: String}) => (
              <PreviewHouseItem house={house} />
            ))
          }   
        </div>
      </div>

      <div id="venta" class="tabcontent animate-fadeIn">
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4 mt-6">
           { SellData.map((house : {house: String}) => (
              <PreviewHouseItem house={house} />
            ))
          } 
        </div> 
      </div>

      <div id="renta" class="tabcontent animate-fadeIn">
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4 mt-6">
           { RentData.map((house : {house: String}) => (
              <PreviewHouseItem house={house} />
            ))
          } 
        </div> 
      </div>
      
    </section>

  </main>

</Layout>

<style>
  /* Ocultar todos los contenidos de las pestañas por defecto */
  .tabcontent {
    display: none;
    padding: 10px;
  }
  
  /* Estilo para el botón activo */
  .tablinks.active {
    border-bottom: 2px solid #2563eb; /* Color azul similar a "text-primary" */
    color: #2563eb;
  }
</style>

<script>
  document.addEventListener('astro:page-load', () => {
    const tabLinks = document.querySelectorAll(".tablinks");
    const tabContents = document.querySelectorAll(".tabcontent");
  
    function openTab(event: Event) {
      const currentTarget = event.currentTarget as HTMLElement | null;
      if (!currentTarget) return;
      const tabName = currentTarget.dataset.tab;
  
      // Oculta todos los contenidos
      tabContents.forEach(tab => ((tab as HTMLElement).style.display = "none"));
  
      // Quita la clase "active" de todos los botones
      tabLinks.forEach(link => link.classList.remove("active"));
  
      // Muestra la pestaña correspondiente
      if (tabName) {
        document.getElementById(tabName)!.style.display = "block";
      }
  
      // Marca el botón activo
      if (event.currentTarget) {
        (event.currentTarget as HTMLElement).classList.add("active");
      }
    }
  
    // Agregar eventos a cada botón
    tabLinks.forEach(button => button.addEventListener("click", openTab));
  
    // Mostrar la primera pestaña por defecto
    if (tabLinks.length > 0) {
      (tabLinks[0] as HTMLElement).click();
    }
  });
  </script>